# -*- coding: utf-8 -*-
"""Clustering_Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_gerA3dgSMaEb-EkXXPr8A13llHPdNxp
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler

df = pd.read_csv("/content/income.csv")
df

plt.scatter(df["Age"], df['Income($)'])
plt.xlabel('Age')
plt.ylabel('Income($)')
plt.show()

km = KMeans(n_clusters=3)
x = df[["Age" , "Income($)"]]

y_pred = km.fit_predict(x)

y_pred

df['Cluster'] = y_pred
df

km.cluster_centers_ # shows the location of points which we have droped.

df1 = df[df['Cluster'] == 0]
df2 = df[df['Cluster'] == 1]
df3 = df[df['Cluster'] == 2]

plt.scatter(df1['Age'] , df1['Income($)'] , color = 'Red')
plt.scatter(df2['Age'] , df2['Income($)'] , color = 'Green')
plt.scatter(df3['Age'] , df3['Income($)'] , color = 'blue')
plt.scatter(km.cluster_centers_[:,0] , km.cluster_centers_[:,1],color = "black" , marker = "+" , label = "Centroid")

# scaling the data for better output

scaler = MinMaxScaler()

scaler.fit(df[['Income($)']])
df['Income($)'] = scaler.transform(df[['Income($)']])

scaler.fit(df[['Age']])
df['Age'] = scaler.transform(df[['Age']])

df



plt.scatter(df['Age'],df['Income($)'])

plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color = 'black',marker = '*')

km1 = KMeans(n_clusters=3)
x1 = df[['Age','Income($)']]
y_pred1 = km1.fit_predict(x1)
y_pred1

df['Cluster1'] = y_pred1
df

km1.cluster_centers_

df1 = df[df['Cluster1'] == 0]
df2 = df[df['Cluster1'] == 1]
df3 = df[df['Cluster1'] == 2]

plt.scatter(df1['Age'],df1['Income($)'],color = 'red')
plt.scatter(df2['Age'],df2['Income($)'],color = 'Green')
plt.scatter(df3['Age'],df3['Income($)'],color = 'Blue')
plt.scatter(km1.cluster_centers_[:,0],km1.cluster_centers_[:,1],color = 'black',marker = '*')
plt.show()

df

